{"remainingRequest":"/Users/macbook/Desktop/my_app/revengood/node_modules/babel-loader/lib/index.js!/Users/macbook/Desktop/my_app/revengood/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macbook/Desktop/my_app/revengood/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbook/Desktop/my_app/revengood/src/components/Admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbook/Desktop/my_app/revengood/src/components/Admin.vue","mtime":1605563781886},{"path":"/Users/macbook/Desktop/my_app/revengood/node_modules/cache-loader/dist/cjs.js","mtime":1595348113291},{"path":"/Users/macbook/Desktop/my_app/revengood/node_modules/babel-loader/lib/index.js","mtime":1595348113281},{"path":"/Users/macbook/Desktop/my_app/revengood/node_modules/cache-loader/dist/cjs.js","mtime":1595348113291},{"path":"/Users/macbook/Desktop/my_app/revengood/node_modules/vue-loader/lib/index.js","mtime":1604339889530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qIGVzbGludC1kaXNhYmxlIG5vLWRlYnVnZ2VyICovCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQWRtaW4nLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBxdWFsaXRpZXM6IFsnMScsICcxLjEnLCAnMS4yJywgJzEuMycsICcxLjQnLCAnMS41JywgJzEuNicsICcxLjcnLCAnMS44JywgJzEuOScsICcyJywgJzIuMScsICcyLjInLCAnMi4zJywgJzIuNCcsICcyLjUnLCAnMi42JywgJzIuNycsICcyLjgnLCAnMi45JywgJzMnLCAnMy4xJywgJzMuMicsICczLjMnLCAnMy40JywgJzMuNScsICczLjYnLCAnMy43JywgJzMuOCcsICczLjknLCAnNCcsICc0LjEnLCAnNC4yJywgJzQuMycsICc0LjQnLCAnNC41JywgJzQuNicsICc0LjcnLCAnNC44JywgJzQuOScsICc1J10sCiAgICAgIGhvdGVsc0dyb3VwOiBbewogICAgICAgIG5hbWU6ICdteSBob3RlbCcsCiAgICAgICAgdmFsdWU6ICcnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnSG90ZWwgMicsCiAgICAgICAgdmFsdWU6ICcnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnSG90ZWwgMycsCiAgICAgICAgdmFsdWU6ICcnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnSG90ZWwgNCcsCiAgICAgICAgdmFsdWU6ICcnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnSG90ZWwgNScsCiAgICAgICAgdmFsdWU6ICcnCiAgICAgIH1dLAogICAgICBteUF2ZXJhZ2VTZXQ6IDAsCiAgICAgIGNvbXBldGl0aXZlU2V0OiAwLAogICAgICByZXN1bHRzOiBbewogICAgICAgIG5hbWU6ICdIb3RlbCAyJywKICAgICAgICB2YWx1ZTogMAogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ0hvdGVsIDMnLAogICAgICAgIHZhbHVlOiAwCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnSG90ZWwgNCcsCiAgICAgICAgdmFsdWU6IDAKICAgICAgfSwgewogICAgICAgIG5hbWU6ICdIb3RlbCA1JywKICAgICAgICB2YWx1ZTogMAogICAgICB9XQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZVF1YWxpdHk6IGZ1bmN0aW9uIGNoYW5nZVF1YWxpdHkodmFsdWUsIGluZGV4KSB7CiAgICAgIHRoaXMuaG90ZWxzR3JvdXBbaW5kZXhdLnZhbHVlID0gdmFsdWU7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX0FMTF9RVUFMSVRZJywgdGhpcy5ob3RlbHNHcm91cCk7CiAgICAgIHRoaXMuYXZlcmFnZVNldCgpOwogICAgICB0aGlzLmF2ZXJhZ2VPbmVUb09uZShpbmRleCk7CiAgICB9LAogICAgYXZlcmFnZVNldDogZnVuY3Rpb24gYXZlcmFnZVNldCgpIHsKICAgICAgdmFyIG15U3VtQXZlcmFnZVNldCA9IDA7CiAgICAgIHRoaXMuaG90ZWxzR3JvdXAuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwgaWR4KSB7CiAgICAgICAgaWYgKGl0ZW0udmFsdWUgIT09ICcnICYmIGlkeCAhPT0gMCkgewogICAgICAgICAgbXlTdW1BdmVyYWdlU2V0ICs9IE51bWJlcihpdGVtLnZhbHVlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLm15QXZlcmFnZVNldCA9IG15U3VtQXZlcmFnZVNldCAvICh0aGlzLmhvdGVsc0dyb3VwLmxlbmd0aCAtIDEpOwoKICAgICAgaWYgKHRoaXMubXlBdmVyYWdlU2V0ICE9PSAwKSB7CiAgICAgICAgdGhpcy5jb21wZXRpdGl2ZVNldCA9IE51bWJlcih0aGlzLmhvdGVsc0dyb3VwWzBdLnZhbHVlKSAvIHRoaXMubXlBdmVyYWdlU2V0OwogICAgICB9CiAgICB9LAogICAgYXZlcmFnZU9uZVRvT25lOiBmdW5jdGlvbiBhdmVyYWdlT25lVG9PbmUoaW5kZXgpIHsKICAgICAgaWYgKGluZGV4ICE9PSAwKSB7CiAgICAgICAgdmFyIG9uZVRvT25lID0gTnVtYmVyKHRoaXMuaG90ZWxzR3JvdXBbMF0udmFsdWUpIC8gdGhpcy5ob3RlbHNHcm91cFtpbmRleF0udmFsdWU7CiAgICAgICAgdGhpcy5yZXN1bHRzW2luZGV4IC0gMV0udmFsdWUgPSBvbmVUb09uZTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["Admin.vue"],"names":[],"mappings":"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","sourcesContent":["\n\n<template>\n  <div>\n    <v-container fluid>\n      <v-row>\n        <v-col\n          cols=\"4\"\n          sm=\"6\"\n        >\n          <p style=\"text-align:center;\">Tabla de calidad</p>\n          <table class=\"table table-hover table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Hoteles</th>\n                <th scope=\"col\">Calidad</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(hotel, index) in hotelsGroup\"\n                :key=\"index\">\n                <td scope=\"col\" >\n                {{ hotel.name }}\n                </td>\n                <td>\n                  <v-select\n                    v-model=\"hotelsGroup[index].value\"\n                    :items=\"qualities\"\n                    label=\"Calidad\"\n                    dense\n                    class=\"select quality\"\n                    v-on:change=\"changeQuality(hotelsGroup[index].value, index)\"\n                  ></v-select>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n         </v-col>\n         \n          <v-col\n          cols=\"4\"\n          sm=\"6\"\n        >\n        <p style=\"text-align:center;\">Resultados</p>\n         <table class=\"table table-hover table-bordered\">\n              <tr>\n                <td>\n                  Promedio del Set\n                </td>\n                <td>{{ myAverageSet.toFixed(2) }}</td>\n                </tr>\n                <tr>\n                  <td>\n                  Competitiva VS Set\n                  </td>\n                  <td>{{ competitiveSet.toFixed(2) }}</td>\n                </tr>\n                <tr v-for=\"(result, index) in results\"\n                :key=\"index\">\n                  <td>\n                    Competitiva VS {{ result.name}}\n                  </td>\n                  <td>{{result.value.toFixed(2)}}</td>\n                </tr>\n          </table>\n          </v-col>\n       </v-row> \n    </v-container>\n  </div>\n</template>\n<script>\n/* eslint-disable no-debugger */\n  export default {\n    name: 'Admin',\n    data () {\n      return {\n        qualities: [\n          '1',\n          '1.1',\n          '1.2',\n          '1.3',\n          '1.4',\n          '1.5',\n          '1.6',\n          '1.7',\n          '1.8',\n          '1.9',\n          '2',        \n          '2.1',\n          '2.2',\n          '2.3',\n          '2.4',\n          '2.5',\n          '2.6',\n          '2.7',\n          '2.8',\n          '2.9',\n          '3',         \n          '3.1',\n          '3.2',\n          '3.3',\n          '3.4',\n          '3.5',\n          '3.6',\n          '3.7',\n          '3.8',\n          '3.9',\n          '4',\n          '4.1',\n          '4.2',\n          '4.3',\n          '4.4',\n          '4.5',\n          '4.6',\n          '4.7',\n          '4.8',\n          '4.9',\n          '5',\n        ],\n        hotelsGroup: [\n          {\n            name: 'my hotel',\n            value: ''          \n          },\n          {\n            name: 'Hotel 2',\n            value: ''         \n          },\n          {\n            name: 'Hotel 3',\n            value: ''\n          },\n          {\n            name: 'Hotel 4',\n            value: ''         \n          },\n          {\n            name: 'Hotel 5',\n            value: ''         \n          },\n        ],\n        myAverageSet: 0,\n        competitiveSet: 0,\n        results: [\n          {\n            name: 'Hotel 2',\n            value: 0\n          },\n          {\n            name: 'Hotel 3',\n            value: 0\n          },\n          {\n            name: 'Hotel 4',\n            value: 0\n          },\n          {\n            name: 'Hotel 5',\n            value: 0\n          }\n        ]\n      }\n    },\n    methods: {\n      changeQuality(value, index) {\n        this.hotelsGroup[index].value = value;\n        this.$store.commit('SET_ALL_QUALITY', this.hotelsGroup);\n        this.averageSet();\n        this.averageOneToOne(index);\n      },\n      averageSet() {\n        let mySumAverageSet = 0;\n        this.hotelsGroup.forEach((item, idx) => {\n          if(item.value !== '' && idx !== 0) {\n            mySumAverageSet += Number(item.value);\n          }\n        });\n        this.myAverageSet = mySumAverageSet / (this.hotelsGroup.length - 1);\n        if(this.myAverageSet !== 0) {\n          this.competitiveSet = Number(this.hotelsGroup[0].value) / this.myAverageSet;\n        }\n        \n      },\n      averageOneToOne(index) {\n        if(index !== 0) {\n        const oneToOne = Number(this.hotelsGroup[0].value) / this.hotelsGroup[index].value;\n        this.results[index - 1].value = oneToOne;\n        }\n      },\n    }\n  }\n</script>\n<style lang=\"scss\" scoped>\n  .select {\n    max-width: 250px;\n    &.quality {\n      width: 100px;\n      margin: 0;\n    }\n  }\n</style>"],"sourceRoot":"src/components"}]}